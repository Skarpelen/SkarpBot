// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkarpBot.Data.Context;

namespace SkarpBot.Data.Migrations
{
    [DbContext(typeof(SkarpBotDbContext))]
    [Migration("20220724141155_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("SkarpBot.Data.Models.Grenades", b =>
                {
                    b.Property<int>("GrenadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("GrenadeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("GrenadeId");

                    b.HasIndex("UsersId");

                    b.ToTable("Grenades");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Guilds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Armour")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Body")
                        .HasColumnType("int");

                    b.Property<int>("Head")
                        .HasColumnType("int");

                    b.Property<int>("LFoot")
                        .HasColumnType("int");

                    b.Property<int>("LHand")
                        .HasColumnType("int");

                    b.Property<int>("RFoot")
                        .HasColumnType("int");

                    b.Property<int>("RHand")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("StatusId");

                    b.HasIndex("UsersId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GuildsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("UserDiscordID")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("GuildsId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Weapons", b =>
                {
                    b.Property<int>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentAmmo")
                        .HasColumnType("int");

                    b.Property<string>("InventoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.Property<string>("WeaponName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("WeaponId");

                    b.HasIndex("UsersId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Grenades", b =>
                {
                    b.HasOne("SkarpBot.Data.Models.Users", "Users")
                        .WithMany("Grenades")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Status", b =>
                {
                    b.HasOne("SkarpBot.Data.Models.Users", "Users")
                        .WithMany("Status")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Users", b =>
                {
                    b.HasOne("SkarpBot.Data.Models.Guilds", "Guilds")
                        .WithMany("Users")
                        .HasForeignKey("GuildsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guilds");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Weapons", b =>
                {
                    b.HasOne("SkarpBot.Data.Models.Users", "Users")
                        .WithMany("Weapons")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Guilds", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SkarpBot.Data.Models.Users", b =>
                {
                    b.Navigation("Grenades");

                    b.Navigation("Status");

                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
